name: "Publish to GitHub Pages"

env:
  GODOT_VERSION: 4.5

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    container:
      image: barichello/godot-ci:4.5

    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v5

      - name: üì¶ Ensure HTML5 export templates are available
        run: |
          set -eux
          mkdir -v -p ~/.local/share/godot/export_templates
          # Try common locations used by different container images
          if [ -d "/root/.local/share/godot/export_templates/${GODOT_VERSION}.stable" ]; then
            mv "/root/.local/share/godot/export_templates/${GODOT_VERSION}.stable" ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          elif [ -d "/usr/share/godot/export_templates/${GODOT_VERSION}.stable" ]; then
            mv "/usr/share/godot/export_templates/${GODOT_VERSION}.stable" ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          else
            echo "Export templates not found in container; downloading official export templates for Godot ${GODOT_VERSION}"
            # Download official export templates archive and extract the html5 template directory
            TMPZIP="godot_export_templates_${GODOT_VERSION}.stable.zip"
            URL="https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/Godot_v${GODOT_VERSION}-stable_export_templates.tpz"
            # Try alternative official URL pattern if first fails
            if ! curl -fSL -o "$TMPZIP" "$URL"; then
              URL2="https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/Godot_v${GODOT_VERSION}-stable-export-templates.zip"
              curl -fSL -o "$TMPZIP" "$URL2"
            fi
            unzip -q "$TMPZIP" -d export_templates_tmp
            # Move any found templates into place
            if [ -d export_templates_tmp/templates ]; then
              mv export_templates_tmp/templates/* ~/.local/share/godot/export_templates/ || true
            else
              mv export_templates_tmp/* ~/.local/share/godot/export_templates/ || true
            fi
            rm -rf "$TMPZIP" export_templates_tmp || true
          fi

      - name: üóÇÔ∏è Create staging directory
        run: mkdir -v -p build/web

      - name: üèóÔ∏è Build
        run: godot -v --export-release --headless "Web" build/web/index.html project.godot

      - name: üõ°Ô∏è Add coi-service-worker
        run: |
          git clone https://github.com/gzuidhof/coi-serviceworker.git
          mv coi-serviceworker/coi-serviceworker.js build/web/coi-serviceworker.js
          sed -i '3 i <script src="coi-serviceworker.js"></script>' build/web/index.html

      - name: üìÅ Debug
        run: |
          echo "Contents of build/web:"
          ls -la build/web || true
          echo "\nFirst 120 lines of build/web/index.html (if present):"
          if [ -f build/web/index.html ]; then
            sed -n '1,120p' build/web/index.html || true
          else
            echo "index.html not found"
          fi

      - name: üöÄ Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          publish_branch: gh-pages
          force_orphan: true
          user_name: "github-ci[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Publish to gh-pages"
